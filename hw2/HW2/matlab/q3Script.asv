datadir = '../data/q3';
resultdir = '../result/q3';

if(~exist(resultdir,'dir'))
    mkdir(resultdir);
end

load(sprintf('%s/lights.mat', datadir), '-mat');

[g1 d1] = separateGlobalDirect(sprintf('%s/light01_checkerboard', datadir));
[g2 d2] = separateGlobalDirect(sprintf('%s/light02_checkerboard', datadir));
[g3 d3] = separateGlobalDirect(sprintf('%s/light03_checkerboard', datadir));

imwrite(g1, sprintf('%s/scene1_global.png', resultdir));
imwrite(d1, sprintf('%s/scene1_direct.png', resultdir));
imwrite(g2, sprintf('%s/scene2_global.png', resultdir));
imwrite(d2, sprintf('%s/scene2_direct.png', resultdir));
imwrite(g3, sprintf('%s/scene3_global.png', resultdir));
imwrite(d3, sprintf('%s/scene3_direct.png', resultdir));

img1 = double(imread(sprintf('%s/light01.png', datadir)))/255;
img2 = double(imread(sprintf('%s/light02.png', datadir)))/255;
img3 = double(imread(sprintf('%s/light03.png', datadir)))/255;

[normals albedo] = computeNormals( img1, img2, img3, lv1, lv2, lv3, darkThreshold);

[Ni Z] = integrability2(normals);

figure;
imshow(uint8(Z));

% 3*N to P*Q*3
function [normal] = normTointnorm(normals, p, q)
for i=1:p
    for j=1:q
        normals(:,
    end
end
end